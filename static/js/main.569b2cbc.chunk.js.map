{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","todos","selectHandler","search","changeHandler","choosedSelect","className","type","value","onChange","placeholder","name","filter","todo","title","includes","toLowerCase","map","key","id","classNames","completed","readOnly","onClick","userId","defaultProps","CurrentUser","state","currUser","prevProps","a","this","props","fetch","then","response","json","data","setState","email","phone","clearHandler","React","Component","App","selectedUserId","e","target","filterTodos","items","item","visibleTodos","showBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.569b2cbc.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  selectHandler,\n  search,\n  changeHandler,\n  choosedSelect,\n}) => {\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <label>\n        <input\n          type=\"text\"\n          className=\"TodoList__input\"\n          value={search}\n          onChange={changeHandler}\n          placeholder=\"Search\"\n          name=\"search\"\n        />\n      </label>\n      <label>\n        <select\n          className=\"TodoList__select\"\n          name=\"choosedSelect\"\n          value={choosedSelect}\n          onChange={changeHandler}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </label>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.filter(todo => (\n            todo.title && todo.title.includes(search.toLowerCase())\n          )).map(todo => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                !todo.completed\n                  ? 'TodoList__item--unchecked'\n                  : 'TodoList__item--checked',\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => selectHandler(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      complited: PropTypes.string.isRequired,\n      userId: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  selectHandler: PropTypes.func.isRequired,\n  search: PropTypes.string,\n  changeHandler: PropTypes.func.isRequired,\n  choosedSelect: PropTypes.string.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  search: '',\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currUser: null,\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      const data = await getUsers(`${this.props.userId}`);\n\n      this.setState({\n        currUser: data,\n      });\n    }\n  }\n\n  render() {\n    const { userId } = this.props;\n    const { currUser } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        {currUser ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                {`Selected user: ${userId}`}\n              </span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">{currUser.name}</h3>\n            <p className=\"CurrentUser__email\">{currUser.email}</p>\n            <p className=\"CurrentUser__phone\">{currUser.phone}</p>\n            <button\n              type=\"button\"\n              className=\"CurrentUser__clear\"\n              onClick={this.props.clearHandler}\n            >\n              Clear\n            </button>\n          </>\n        ) : 'No user selected'}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearHandler: PropTypes.func.isRequired,\n};\n","const url\n  = 'https://mate-api.herokuapp.com/todos';\n\nconst usersUrl\n  = 'https://mate-api.herokuapp.com/users/';\n\nexport const getData = () => (\n  fetch(url)\n    .then(response => response.json())\n    .then(response => response.data)\n);\n\nexport const getUsers = userId => (\n  fetch(`${usersUrl}${userId}`)\n    .then(response => response.json())\n    .then(response => response.data)\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getData } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    search: '',\n    choosedSelect: '',\n  };\n\n  async componentDidMount() {\n    const data = await getData();\n\n    this.setState({\n      todos: data,\n    });\n  }\n\n  selectHandler = id => (\n    this.setState({ selectedUserId: id })\n  );\n\n  clearHandler = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterTodos = (items) => {\n    const { choosedSelect } = this.state;\n\n    switch (choosedSelect) {\n      case 'active':\n        return items.filter(item => item.completed);\n\n      case 'completed':\n        return items.filter(item => !item.completed);\n\n      case 'all':\n        return items;\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    const visibleTodos = this.filterTodos(todos);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visibleTodos}\n            selectHandler={this.selectHandler}\n            search={this.state.search}\n            changeHandler={this.changeHandler}\n            showBy={this.showBy}\n            choosedSelect={this.state.choosedSelect}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            <CurrentUser\n              userId={selectedUserId}\n              clearHandler={this.clearHandler}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}